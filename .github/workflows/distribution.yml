# This is a basic workflow to help you get started with Actions

name: Distribution

on:
  workflow_dispatch:
    inputs:
      name:
        type: choice
        description: Version
        options:
        - BUILD_NUMBER
        - MAJOR
        - MINOR
        - PATCH
      note:
      use-emoji:
        type: boolean
        description: Include ðŸŽ‰ðŸ¤£ emojis
      environment:
        type: environment

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: self-hosted
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        
      - name: install firebase
        run: curl -sL https://firebase.tools | bash
    
      - name: Xcode list
        run: ls -n /Applications/ | grep Xcode*
        
      - name: Select Xcode
        run: sudo xcode-select -switch /Applications/Xcode_12.5.1.app
      
      - name: Xcode version
        run: /usr/bin/xcodebuild -version
        
      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
          
      - name: Pod install
        run: pod install
        
      - name: Clean workspace with scheme
        run: xcodebuild clean -workspace RibsTest.xcworkspace -scheme RibsTest

      - name: Build workspace with scheme
        run: xcodebuild build -workspace RibsTest.xcworkspace -scheme RibsTest
        
      - name: Archive workspace
        run: xcodebuild archive -workspace RibsTest.xcworkspace -scheme RibsTest -archivePath $PWD/result/RibsTest.xcarchive
        
      - name: ls for checking xcarhive file
        run: ls result
        
      - name: Create ipa file
        run: xcodebuild -exportArchive -archivePath $PWD/result/RibsTest.xcarchive -exportPath $PWD/result -exportOptionsPlist $PWD/RibsTest/ExportOptions.plist

      - name: Check files
        run: ls result
        
      - name: Upload ipa to Firebase App Distribution
        run: firebase appdistribution:distribute $PWD/result/RibsTest.ipa --app ${{secrets.FIREBASE_APP_ID}} --token ${{secrets.FIREBASE_TOKEN}} --release-notes "TEST CI/CD BY GITHUB ACTION"

